<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.iu.main.bankbook.BankBookDAO"> 
  <sql id="searchSql">
    	WHERE BOOKNUM>0
		
		<choose>

			<when test="kind == 'name'">
			AND BOOKNAME LIKE '%'||#{search}||'%'
			</when>
			<otherwise>
			AND BOOKCONTENTS LIKE '%'||#{search}||'%'
			</otherwise>
		</choose>
  </sql>
  
  	<select id="getTotal" resultType="java.lang.Long" parameterType="com.iu.main.util.Pager">
  		SELECT COUNT(BOOKNUM) FROM BANKBOOK
		<include refid="searchSql"></include>
  	</select>
 	
 	<select id="getList" resultMap="getDetailResult" parameterType="com.iu.main.util.Pager">
		SELECT BOOKNUM, BOOKNAME, BOOKRATE, BOOKSALE FROM
			(SELECT ROWNUM R, B.* FROM
				(
					SELECT *FROM BANKBOOK
					<include refid="searchSql"></include>	  
					ORDER BY BOOKNUM DESC
				)B
			)
		WHERE R BETWEEN #{startRow} AND #{lastRow}
 	</select>
 	
 	<select id="getDetail" resultMap="getDetailResult" parameterType="BankBookDTO">
 		SELECT B.*, BF.* 
 		FROM BANKBOOK B
 			LEFT JOIN
 			BANKFILE BF
 			ON(B.BOOKNUM=BF.BOOKNUM)
 		WHERE B.BOOKNUM=#{bookNum}
 	</select>
 	
 	<resultMap type="BankBookDTO" id="getDetailResult">
 		<id column="BOOKNUM" property="bookNum"/>
 		<result column="BOOKNAME" property="bookName"/>
 		<result column="BOOKCONTENTS" property="bookContents"/>
 		<result column="BOOKRATE" property="bookRate"/>
 		<result column="BOOKSALE" property="bookSale"/>
 		
 		<collection property="fileDTOs" javaType="List" ofType="BankBookFileDTO">
 			<id column="FILENUM" property="fileNum"/>
 			<result column="FILENAME" property="fileName"/>
 			<result column="ORIGINALNAME" property="originalName"/>
 			
 		</collection>	
 	</resultMap>
 	
 	<select id="getSequence" resultType="Long">
 		SELECT BANK_SEQ.NEXTVAL FROM DUAL
 	</select>
 	
 	<insert id="setAdd" parameterType="BankBookDTO">
 		<selectKey keyProperty="bookNum" resultType="Long" order="BEFORE">
 			SELECT BANK_SEQ.NEXTVAL FROM DUAL 
 		</selectKey>
 		INSERT INTO BANKBOOK
 		VALUES (#{bookNum}, #{bookName}, #{bookRate}, #{bookSale}, #{bookContents})
 	</insert>
 	
  	<insert id="setFileAdd" parameterType="BankBookFileDTO">
 		INSERT INTO BANKFILE
 		VALUES (BANK_SEQ.NEXTVAL, #{bookNum}, #{fileName}, #{originalName})
 	</insert>
 	
 	<delete id="setDelete" parameterType="java.lang.Long">
 		DELETE BANKBOOK WHERE BOOKNUM=#{num}
 	</delete>
 	
	<update id="setUpdate" parameterType="BankBookDTO">
		UPDATE BANKBOOK SET
		BOOKNAME=#{bookName},
		BOOKRATE=#{bookRate},
		BOOKSALE=#{bookSale},
		BOOKCONTENTS=#{bookContents}
		WHERE BOOKNUM=#{bookNum}
	</update>
	
	<delete id="setFileDelete" parameterType="BankBookFileDTO">
		DELETE BANKFILE WHERE FILENUM=#{fileNum}
	</delete>
	
	<select id="getFileDetail" parameterType="BankBookFileDTO" resultType="BankBookFileDTO">
		SELECT FILENUM, FILENAME FROM BANKFILE WHERE FILENUM = #{fileNum}
	</select>
		
  </mapper>